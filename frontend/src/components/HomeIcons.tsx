import { GainerBadgeProps } from "../utils/type";
// import ArrowTopIcon from "../assets/arrow_top.svg";

export const TrendingIcon = ({ isBlack = false }) => {
    return (
        <svg width="20" height="20" viewBox="0 0 18 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1.5 7.16675L3.16667 9.66675L5.66667 5.50008L9.83333 14.6667L14 1.33342L16.5 6.33341" stroke={isBlack ? "#161616" : "#ffffff"} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
    );
};

export const FundraisingIcon = ({ isBlack = false }) => {
    return (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M7.5 13.3333C4.73858 13.3333 2.5 11.0947 2.5 8.33325C2.5 5.57183 4.73858 3.33325 7.5 3.33325C9.54977 3.33325 11.3115 4.56668 12.0833 6.33183M17.5 11.6666C17.5 14.428 15.2614 16.6666 12.5 16.6666C10.3201 16.6666 8.46594 15.2715 7.78176 13.3254C7.59926 12.8064 7.5 12.2481 7.5 11.6666C7.5 8.99972 9.5879 6.8205 12.2182 6.67439C12.3115 6.66921 12.4054 6.66659 12.5 6.66659C15.2614 6.66659 17.5 8.90516 17.5 11.6666Z"
                stroke={isBlack ? "#161616" : "#ffffff"}
                stroke-width="2"
                stroke-linecap="square"
            />
        </svg>
    );
};

export const LiveIcon = ({ isBlack = false }) => {
    return (
        <svg width="20" height="20" viewBox="0 0 18 14" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M4.40381 2.40388C4.79433 2.01336 4.79433 1.38019 4.40381 0.98967C4.01328 0.599146 3.38012 0.599146 2.98959 0.989671L4.40381 2.40388ZM6.76083 4.76091C7.15135 4.37038 7.15135 3.73722 6.76083 3.34669C6.3703 2.95617 5.73714 2.95617 5.34661 3.34669L6.76083 4.76091ZM5.34661 10.6535C5.73714 11.044 6.3703 11.044 6.76083 10.6535C7.15135 10.2629 7.15135 9.62977 6.76083 9.23925L5.34661 10.6535ZM11.2392 9.23925C10.8486 9.62977 10.8486 10.2629 11.2392 10.6535C11.6297 11.044 12.2629 11.044 12.6534 10.6535L11.2392 9.23925ZM12.6534 3.34669C12.2629 2.95617 11.6297 2.95617 11.2392 3.34669C10.8486 3.73722 10.8486 4.37038 11.2392 4.76091L12.6534 3.34669ZM2.98959 13.0105C3.38012 13.401 4.01328 13.401 4.40381 13.0105C4.79433 12.62 4.79433 11.9868 4.40381 11.5963L2.98959 13.0105ZM13.5962 11.5963C13.2057 11.9868 13.2057 12.62 13.5962 13.0105C13.9867 13.401 14.6199 13.401 15.0104 13.0105L13.5962 11.5963ZM15.0104 0.989671C14.6199 0.599146 13.9867 0.599146 13.5962 0.98967C13.2057 1.38019 13.2057 2.01336 13.5962 2.40388L15.0104 0.989671ZM2.5 7.00008C2.5 5.20488 3.22644 3.58125 4.40381 2.40388L2.98959 0.989671C1.45249 2.52677 0.5 4.65314 0.5 7.00008H2.5ZM5.83333 7.00008C5.83333 6.12535 6.18668 5.33506 6.76083 4.76091L5.34661 3.34669C4.41273 4.28058 3.83333 5.57362 3.83333 7.00008H5.83333ZM6.76083 9.23925C6.18668 8.6651 5.83333 7.87481 5.83333 7.00008H3.83333C3.83333 8.42654 4.41273 9.71958 5.34661 10.6535L6.76083 9.23925ZM12.1667 7.00008C12.1667 7.87481 11.8133 8.6651 11.2392 9.23925L12.6534 10.6535C13.5873 9.71958 14.1667 8.42654 14.1667 7.00008H12.1667ZM11.2392 4.76091C11.8133 5.33506 12.1667 6.12535 12.1667 7.00008H14.1667C14.1667 5.57362 13.5873 4.28058 12.6534 3.34669L11.2392 4.76091ZM4.40381 11.5963C3.22644 10.4189 2.5 8.79528 2.5 7.00008H0.5C0.5 9.34701 1.45249 11.4734 2.98959 13.0105L4.40381 11.5963ZM15.5 7.00008C15.5 8.79528 14.7736 10.4189 13.5962 11.5963L15.0104 13.0105C16.5475 11.4734 17.5 9.34701 17.5 7.00008H15.5ZM13.5962 2.40388C14.7736 3.58125 15.5 5.20488 15.5 7.00008H17.5C17.5 4.65314 16.5475 2.52677 15.0104 0.989671L13.5962 2.40388ZM8.83333 7.00007C8.83333 6.90802 8.90795 6.8334 9 6.8334V8.8334C10.0125 8.8334 10.8333 8.01259 10.8333 7.00007H8.83333ZM9 6.8334C9.09205 6.8334 9.16667 6.90802 9.16667 7.00007H7.16667C7.16667 8.01259 7.98748 8.8334 9 8.8334V6.8334ZM9.16667 7.00007C9.16667 7.09212 9.09205 7.16674 9 7.16674V5.16674C7.98748 5.16674 7.16667 5.98755 7.16667 7.00007H9.16667ZM9 7.16674C8.90795 7.16674 8.83333 7.09212 8.83333 7.00007H10.8333C10.8333 5.98755 10.0125 5.16674 9 5.16674V7.16674Z"
                fill={isBlack ? "#161616" : "#ffffff"}
            />
        </svg>
    );
};

export const GainerBadge: React.FC<GainerBadgeProps> = ({ label, multiplier }) => {
    return (
        <div
            role="status"
            aria-label={`${label} with ${multiplier} gain`}
            className="flex gap-2.5 z-50 w-fit justify-center items-center px-2 py-1.5 text-[0.6875rem] font-medium leading-none text-white rounded-lg border-2 border-[#1ecd57] border-solid bg-[#173b2d] shadow-[0px_13px_37px_rgba(41,178,86,0.15)]"
        >
            <div className="self-stretch my-auto">{label}</div>
            {/* <div className="flex shrink-0 self-stretch my-auto w-0.5 h-3.5 bg-green-500 rounded-sm" />
            <div className="flex gap-1 justify-center items-center self-stretch my-auto whitespace-nowrap">
                <img loading="lazy" src={ArrowTopIcon} alt="" className="object-contain shrink-0 self-stretch my-auto w-3.5 aspect-square" />
                <div className="self-stretch my-auto">{multiplier}</div>
            </div> */}
        </div>
    );
};
